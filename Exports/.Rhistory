shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(dplyr)
library(tidyr)
library(Hmisc)
setwd("~/Documents/GitHub/PBE/Exports")
## Teams ##
all_teams <- read.csv('teams.csv',header = TRUE, sep = ',')
teams <- subset(all_teams,all_teams$league_id != 1000)
teams$team_name <- paste(teams$name,teams$nickname)
teams_lookup <- teams[,c(1,3,28)]
## Records History ##
team_history <- read.csv('team_history.csv',header=TRUE, sep=',')
team_history_record <- read.csv('team_history_record.csv',header=TRUE,sep=',')
team_history <- subset(team_history,team_history$league_id != 1000)
team_history <- team_history[,c(1,2,9:11,13:14)]
team_history_record <- subset(team_history_record,team_history_record$league_id != 1000)
## Players ##
combined.players <- read.csv('players.csv',header = TRUE)
combined.players$full_name <- paste(combined.players$first_name,combined.players$last_name)
player_lookup <- combined.players[,c(1,99)]
hitter_player_lookup <- player_lookup
colnames(hitter_player_lookup)[colnames(hitter_player_lookup) == 'player_id'] <- 'best_hitter_id'
colnames(hitter_player_lookup)[colnames(hitter_player_lookup) == 'full_name'] <- 'best_hitter_name'
pitcher_player_lookup <- player_lookup
colnames(pitcher_player_lookup)[colnames(pitcher_player_lookup) == 'player_id'] <- 'best_pitcher_id'
colnames(pitcher_player_lookup)[colnames(pitcher_player_lookup) == 'full_name'] <- 'best_pitcher_name'
rookie_player_lookup <- player_lookup
colnames(rookie_player_lookup)[colnames(rookie_player_lookup) == 'player_id'] <- 'best_rookie_id'
colnames(rookie_player_lookup)[colnames(rookie_player_lookup) == 'full_name'] <- 'best_rookie_name'
## Division ##
divisions <- read.csv("divisions.csv")
divisions$divisions_id <- paste(divisions$league_id,"-",divisions$division_id)
divisions <- divisions[c(4,6)]
team_history_record$divisions_id <- paste(team_history_record$league_id,"-",team_history_record$division_id)
team_history_record <- merge(team_history_record,divisions,by='divisions_id',all.x = TRUE)
team_history_record$divisions_id <- NULL
team_history_record$division_id <- NULL
colnames(team_history_record)[colnames(team_history_record) == 'name'] <- 'division'
## Combine ##
records <- merge(team_history_record,teams_lookup,by = "team_id")
records <- merge(records, team_history, by =c("team_id","year"))
records <- merge(records,hitter_player_lookup, all.x = TRUE)
records <- merge(records,pitcher_player_lookup, all.x = TRUE)
records <- merge(records,rookie_player_lookup, all.x = TRUE)
leagues <- data.frame(league_id = c(100,101), league_abbr = c("PBE","MiPBE") )
records <- merge(records, leagues, all.x = TRUE)
#eliminate first 2 seasons of Armadillos and Mounites, bot seasons
records$id <- paste(records$team_id,"-",records$year,sep = "")
records <- subset(records, records$id %nin% c("17-2021","17-2022","19-2021","19-2022"))
records$id <- NULL
records <- records %>% group_by(league_id) %>% mutate(Lg_Average_Wins = round(mean(w),0)) %>% ungroup()
View(records)
View(records)
p <- ggplot(records,aes(x=year,y=w,group=abbr)) +
geom_line()
p
tm = "DV"
pl.records <- subset(records,records$abbr == tm)
p <- ggplot(pl.records,aes(x=year,y=w,group=abbr)) +
geom_line()
p
p <- ggplot(pl.records,aes(x=year,y=w,group=abbr)) +
geom_line() +
abline(50)
p <- ggplot(pl.records,aes(x=year,y=w,group=abbr)) +
geom_line()
abline(50)
p
p <- ggplot(pl.records,aes(x=year,y=w,group=abbr)) +
geom_line() + abline(50)
p
runApp('~/Documents/GitHub/PBE')
runApp('~/Documents/GitHub/PBE')
runApp('~/Documents/GitHub/PBE')
runApp('~/Documents/GitHub/PBE')
runApp('~/Documents/GitHub/PBE')
runApp('~/Documents/GitHub/PBE')
runApp('~/Documents/GitHub/PBE')
runApp('~/Documents/GitHub/PBE')
runApp('~/Documents/GitHub/PBE')
install.packages("DT")
runApp('~/Documents/GitHub/PBE')
runApp('~/Documents/GitHub/PBE')
runApp('~/Documents/GitHub/PBE')
runApp('~/Documents/GitHub/PBE')
runApp('~/Documents/GitHub/PBE')
runApp('~/Documents/GitHub/PBE')
runApp('~/Documents/GitHub/PBE')
runApp('~/Documents/GitHub/PBE')
runApp('~/Documents/GitHub/PBE')
suppressMessages(library(tidyverse))
suppressMessages(library(dplyr))
suppressMessages(library(ggplot2))
suppressMessages(library(stringr))
suppressMessages(library(RColorBrewer))
#setwd("~/Documents/GitHub/PBE/Exports/")
c.records <- read.csv("Exports/team_record.csv")
c.games_played <- max(c.records$g)
c.x_pl <- read.csv('Exports/players.csv',header = TRUE)
c.x_pl$full_name <- paste(c.x_pl$first_name,c.x_pl$last_name)
c.positions <- data.frame('position' = 1:10, 'position_name' = c('P','C','1B','2B','3B','SS','LF','CF','RF','DH'))
c.combined.players <- merge(c.x_pl,c.positions,by = "position", all.x = TRUE)
c.pl_name_lookup <- c.combined.players[c(2,99,100)]
c.player_career_batting  <- read.csv('Exports/players_career_batting_stats.csv',header = TRUE)
c.player_career_batting <- subset(c.player_career_batting,c.player_career_batting$split_id == 1)
c.bats <- c.player_career_batting[,c(1:3,5,9:11,12:14,16:21,23:24,27:28,32)]
colnames(c.bats)[colnames(c.bats) == 'k'] <- 'SO'
colnames(c.bats)[colnames(c.bats) == 'd'] <- 'Dbl'
colnames(c.bats)[colnames(c.bats) == 't'] <- 'Trp'
colnames(c.bats)[colnames(c.bats) == 't'] <- 'Trp'
c.bats$year <- NULL
c.bats$team_id <- NULL
c.bats <- subset(c.bats,c.bats$league_id != 1000)
c.bats <- c.bats %>%
group_by(player_id, league_id) %>%
summarise_all(funs(sum))
c.player_career_fielding <- read.csv('Exports/players_career_fielding_stats.csv',header = TRUE)
c.fielding <- c.player_career_fielding[c(1:4,37)]
c.fielding$year <- NULL
c.fielding$team_id <- NULL
c.fielding <- subset(c.fielding,c.fielding$league_id != 1000)
c.fielding <- c.fielding %>%
group_by(player_id, league_id) %>%
summarise_all(funs(sum))
c.player_career_pitching <- read.csv('Exports/players_career_pitching_stats.csv',header = TRUE)
c.player_career_pitching <- subset(c.player_career_pitching,c.player_career_pitching$split_id == 1)
c.pitch <- c.player_career_pitching[,c(1:3,5,8:12,15:17,22,24:26,30,32,40,44,45,48,55)]
colnames(c.pitch)[colnames(c.pitch) == 'bb'] <- 'walks'
colnames(c.pitch)[colnames(c.pitch) == 'ab'] <- 'p_ab'
colnames(c.pitch)[colnames(c.pitch) == 'tb'] <- 'p_tb'
colnames(c.pitch)[colnames(c.pitch) == 'r'] <- 'p_r'
colnames(c.pitch)[colnames(c.pitch) == 'sf'] <- 'p_sf'
colnames(c.pitch)[colnames(c.pitch) == 'g'] <- 'p_g'
c.pitch$year <- NULL
c.pitch$team_id <- NULL
c.pitch <- subset(c.pitch,c.pitch$league_id != 1000)
c.pitch <- c.pitch %>%
group_by(player_id,league_id) %>%
summarise_all(list(sum))
c.all <- merge(c.bats,c.pitch,by=c('player_id','league_id'),all=TRUE)
c.all <- merge(c.all,c.fielding,by=c('player_id','league_id'),c.all=TRUE)
c.all[is.na(c.all)] <- 0
c.all$war <- round(c.all$war.x + c.all$war.y,2)
c.all$war.x <- NULL
c.all$war.y <- NULL
c.all <- subset(c.all,c.all$league_id<1000)
c.all$avg <- round(c.all$h/c.all$ab,3)
c.all$obp <- round((c.all$h + c.all$bb + c.all$ibb + c.all$hp)/(c.all$ab + c.all$bb + c.all$ibb + c.all$hp + c.all$sf),3)
c.all$sin <- c.all$h - c.all$Dbl - c.all$Trp - c.all$hr
c.all$rc <- round(((c.all$h+(c.all$bb + c.all$ibb + c.all$hp))*((1*c.all$sin)+(2*c.all$Dbl)+(3*c.all$Trp)+(4*c.all$hr)))/(c.all$ab+(c.all$bb + c.all$ibb + c.all$hp)),0)
c.all$tb <- (1*c.all$sin)+(2*c.all$Dbl)+(3*c.all$Trp)+(4*c.all$hr)
c.all$slg <- round(c.all$tb/c.all$ab,3)
c.all$ops <- c.all$obp + c.all$slg
c.all$iso <- c.all$slg - c.all$avg
c.all$b_babip <- round((c.all$h - c.all$hr)/(c.all$ab - c.all$SO - c.all$hr+c.all$sf),3)
c.all$bat_k_pcnt <- round(c.all$SO / c.all$pa,2)
c.all$bat_bb_pcnt <- round(c.all$bb / c.all$pa,2)
c.all$bat_k_bb_pcnt <- c.all$bat_k_pcnt - c.all$bat_bb_pcnt
c.all$era <- round(((9*c.all$er)/c.all$ip),3)
c.all$whip <- round((c.all$ha + c.all$walks)/c.all$ip,3)
c.all$p_babip <- round((c.all$ha - c.all$hra)/(c.all$p_ab - c.all$k - c.all$hra+c.all$p_sf),3)
c.all$fip <- round(((13*c.all$hra+3*c.all$walks-2*c.all$k)/c.all$ip)+3.1,2)
c.all$HR_per_9 <- round(9 * (c.all$hra/c.all$ip),2)
c.all$R_per_9 <- round(9 * (c.all$p_r/c.all$ip),2)
c.all$H_per_9 <- round(9 * (c.all$ha/c.all$ip),2)
c.all$K_per_9 <- round(9 * (c.all$k/c.all$ip),2)
c.all$BB_per_9 <- round(9 * (c.all$walks/c.all$ip),2)
c.all$pit_k_pcnt <- round(c.all$k / c.all$p_ab,2)
c.all$pit_bb_pcnt <- round(c.all$walks / c.all$p_ab,2)
c.all$pit_k_bb_pcnt <- c.all$pit_k_pcnt - c.all$pit_bb_pcnt
c.all$win_percent <- round(c.all$w / (c.all$w + c.all$l),3)
is.nan.data.frame <- function(x)
do.call(cbind, lapply(x, is.nan))
c.all <- merge(c.all, c.pl_name_lookup, by = 'player_id')
c.all$full_name <- str_replace_all(c.all$full_name,"-","")
c.leagues <- read.csv("Exports/leagues.csv", header = TRUE)
c.leagues <- c.leagues[c(1,3)]
colnames(c.leagues)[colnames(c.leagues) == 'abbr'] <- 'league_abbr'
c.all <- merge(c.all,c.leagues,all.x = TRUE)
c.all[is.nan(c.all)] <- 0
c.all$zr[is.na(c.all$zr)] <- 0
c.all$winloss <- paste(c.all$w,"-",c.all$l)
c.all$name_pos <- paste(c.all$full_name, "-",c.all$position_name)
c.all$url <- paste("http://www.pbesim.com/players/player_",c.all$player_id,".html", sep = "")
c.all$pitch_hit <- ifelse(c.all$position_name != 'P','Hitter','Pitcher')
c.all.hit <- subset(c.all,c.all$pitch_hit == 'Hitter')
c.all.pitch <- subset(c.all, c.all$pitch_hit == "Pitcher")
c.all.hit <- c.all.hit[-c(19:36,51:63,67)]
colnames(c.all.hit)[colnames(c.all.hit) == 'ab'] <- 'At Bats'
colnames(c.all.hit)[colnames(c.all.hit) == 'h'] <- 'Hits'
colnames(c.all.hit)[colnames(c.all.hit) == 'SO'] <- 'Strikeouts'
colnames(c.all.hit)[colnames(c.all.hit) == 'pa'] <- 'Plate Apperances'
colnames(c.all.hit)[colnames(c.all.hit) == 'g'] <- 'Games'
colnames(c.all.hit)[colnames(c.all.hit) == 'Dbl'] <- 'Doubles'
colnames(c.all.hit)[colnames(c.all.hit) == 'Trp'] <- 'Triples'
colnames(c.all.hit)[colnames(c.all.hit) == 'hr'] <- 'Homeruns'
colnames(c.all.hit)[colnames(c.all.hit) == 'r'] <- 'Runs'
colnames(c.all.hit)[colnames(c.all.hit) == 'rbi'] <- 'RBI'
colnames(c.all.hit)[colnames(c.all.hit) == 'sb'] <- 'Stolen Bases'
colnames(c.all.hit)[colnames(c.all.hit) == 'bb'] <- 'Walks'
colnames(c.all.hit)[colnames(c.all.hit) == 'zr'] <- 'Zone Rating'
colnames(c.all.hit)[colnames(c.all.hit) == 'war'] <- 'WAR'
colnames(c.all.hit)[colnames(c.all.hit) == 'avg'] <- 'Average'
colnames(c.all.hit)[colnames(c.all.hit) == 'obp'] <- 'OBP'
colnames(c.all.hit)[colnames(c.all.hit) == 'sin'] <- 'Single'
colnames(c.all.hit)[colnames(c.all.hit) == 'rc'] <- 'Runs Created'
colnames(c.all.hit)[colnames(c.all.hit) == 'tb'] <- 'Total Bases'
colnames(c.all.hit)[colnames(c.all.hit) == 'slg'] <- 'SLG'
colnames(c.all.hit)[colnames(c.all.hit) == 'ops'] <- 'OPS'
colnames(c.all.hit)[colnames(c.all.hit) == 'iso'] <- 'ISO'
colnames(c.all.hit)[colnames(c.all.hit) == 'b_babip'] <- 'BABIP'
colnames(c.all.hit)[colnames(c.all.hit) == 'bat_k_pcnt'] <- 'K Percent'
colnames(c.all.hit)[colnames(c.all.hit) == 'bat_bb_pcnt'] <- 'BB Percent'
colnames(c.all.hit)[colnames(c.all.hit) == 'bat_k_bb_pcnt'] <- 'K-BB Percent'
c.all.pitch <- c.all.pitch[-c(3:18,37,39:50)]
colnames(c.all.pitch)[colnames(c.all.pitch) =='ip']<-'Innings Pitched'
colnames(c.all.pitch)[colnames(c.all.pitch) =='ha']<-'Hits Allowed'
colnames(c.all.pitch)[colnames(c.all.pitch) =='k']<-'Strikeouts'
colnames(c.all.pitch)[colnames(c.all.pitch) =='walks']<-'Walks'
colnames(c.all.pitch)[colnames(c.all.pitch) =='p_r']<-'Runs Allowed'
colnames(c.all.pitch)[colnames(c.all.pitch) =='er']<-'Earned Runs'
colnames(c.all.pitch)[colnames(c.all.pitch) =='w']<-'Wins'
colnames(c.all.pitch)[colnames(c.all.pitch) =='l']<-'Loss'
colnames(c.all.pitch)[colnames(c.all.pitch) =='s']<-'Saves'
colnames(c.all.pitch)[colnames(c.all.pitch) =='hra']<-'Homeruns Allowed'
colnames(c.all.pitch)[colnames(c.all.pitch) =='qs']<-'Quality Start'
colnames(c.all.pitch)[colnames(c.all.pitch) =='cg']<-'Complete Game'
colnames(c.all.pitch)[colnames(c.all.pitch) =='sho']<-'Shutout'
colnames(c.all.pitch)[colnames(c.all.pitch) =='hld']<-'Hold'
colnames(c.all.pitch)[colnames(c.all.pitch) =='war']<-'WAR'
colnames(c.all.pitch)[colnames(c.all.pitch) =='era']<-'ERA'
colnames(c.all.pitch)[colnames(c.all.pitch) =='whip']<-'WHIP'
colnames(c.all.pitch)[colnames(c.all.pitch) =='p_babip']<-'BABIP'
colnames(c.all.pitch)[colnames(c.all.pitch) =='fip']<-'FIP'
colnames(c.all.pitch)[colnames(c.all.pitch) =='HR_per_9']<-'HR per 9'
colnames(c.all.pitch)[colnames(c.all.pitch) =='R_per_9']<-'R per 9'
colnames(c.all.pitch)[colnames(c.all.pitch) =='H_per_9']<-'Hits per 9'
colnames(c.all.pitch)[colnames(c.all.pitch) =='K_per_9']<-'Ks per 9'
colnames(c.all.pitch)[colnames(c.all.pitch) =='BB_per_9']<-'BB per 9'
colnames(c.all.pitch)[colnames(c.all.pitch) =='pit_k_pcnt']<-'K percent'
colnames(c.all.pitch)[colnames(c.all.pitch) =='pit_bb_pcnt']<-'BB percent'
colnames(c.all.pitch)[colnames(c.all.pitch) =='pit_k_bb_pcnt']<-'K-BB percent'
colnames(c.all.pitch)[colnames(c.all.pitch) =='winloss']<-'Win-Loss'
colnames(c.all.pitch)[colnames(c.all.pitch) =='win_percent']<-'Win Percent'
runApp('~/Documents/GitHub/PBE/PBE_App.R')
runApp('~/Documents/GitHub/PBE/PBE_App.R')
runApp('~/Documents/GitHub/PBE/PBE_App.R')
setwd("~/Documents/GitHub/PBE/Exports")
suppressMessages(library(tidyverse))
suppressMessages(library(dplyr))
suppressMessages(library(ggplot2))
suppressMessages(library(stringr))
suppressMessages(library(RColorBrewer))
suppressMessages(library(Hmisc))
#setwd("~/Documents/GitHub/PBE/Exports/")
tm <- read.csv("~/Documents/GitHub/PBE/Exports/teams.csv")
tm$`Team Name` <- paste(tm$name,tm$nickname)
tm <- tm[c(1,3,8,28)]
colnames(tm)[colnames(tm) == 'abbr'] <- 'Team Abbr'
lg <- read.csv("~/Documents/GitHub/PBE/Exports/leagues.csv")
lg <- lg[c(1,3)]
colnames(lg)[colnames(lg) == 'abbr'] <- 'League'
stdp <- read.csv("~/Documents/GitHub/PBE/Exports/team_record.csv")
stdp <- stdp[c(1,5,6)]
stdp <- subset(stdp,stdp$team_id %nin% c(7,8,12,13,14,15,22,23))
colnames(stdp)[colnames(stdp) == 'pos'] <- 'All - Division Standing'
lkup <- merge(tm,lg, all.x = TRUE)
lkup <- merge(lkup, stdp)
lkup <- lkup %>%
group_by(league_id) %>%
mutate(`All - League Standing` = round(rank(-pct),0)) %>%
ungroup
lkup$pct <- NULL
tm_pitch <- read.csv("Exports/team_pitching_stats.csv")
tm_pitch <- subset(tm_pitch, tm_pitch$split_id == 1)
tm_pitch$Walks <- tm_pitch$bb + tm_pitch$iw + tm_pitch$hp
tm_pitch <- tm_pitch[-c(2,4:6,13,19,20,21,25:29,31:37,44:45,56,58:63,65,66)]
{
colnames(tm_pitch)[colnames(tm_pitch) =='ip'] <- 'Pitching - Innings Pitched'
colnames(tm_pitch)[colnames(tm_pitch) =='bf'] <- 'Pitching - Batters Faced'
colnames(tm_pitch)[colnames(tm_pitch) =='tb'] <- 'Pitching - Total Bases'
colnames(tm_pitch)[colnames(tm_pitch) =='ha'] <- 'Pitching - Hits Allowed'
colnames(tm_pitch)[colnames(tm_pitch) =='k'] <- 'Pitching - Strikeouts'
colnames(tm_pitch)[colnames(tm_pitch) =='rs'] <- 'Pitching - Run Support'
colnames(tm_pitch)[colnames(tm_pitch) =='r'] <- 'Pitching - Runs'
colnames(tm_pitch)[colnames(tm_pitch) =='er'] <- 'Pitching - Earned Runs'
colnames(tm_pitch)[colnames(tm_pitch) =='gb'] <- 'Pitching - Ground Balls'
colnames(tm_pitch)[colnames(tm_pitch) =='fb'] <- 'Pitching - Fly Balls'
colnames(tm_pitch)[colnames(tm_pitch) =='pi'] <- 'Pitching - Production Index'
colnames(tm_pitch)[colnames(tm_pitch) =='w'] <- 'Pitching - Wins'
colnames(tm_pitch)[colnames(tm_pitch) =='l'] <- 'Pitching - Loss'
colnames(tm_pitch)[colnames(tm_pitch) =='s'] <- 'Pitching - Saves'
colnames(tm_pitch)[colnames(tm_pitch) =='hra'] <- 'Pitching - Homeruns Allowed'
colnames(tm_pitch)[colnames(tm_pitch) =='qs'] <- 'Pitching - Qualty Starts'
colnames(tm_pitch)[colnames(tm_pitch) =='svo'] <- 'Pitching - Save Opportunities'
colnames(tm_pitch)[colnames(tm_pitch) =='bs'] <- 'Pitching - Blown Saves'
colnames(tm_pitch)[colnames(tm_pitch) =='ra'] <- 'Pitching - Run Average'
colnames(tm_pitch)[colnames(tm_pitch) =='cg'] <- 'Pitching - Complete Game'
colnames(tm_pitch)[colnames(tm_pitch) =='sho'] <- 'Pitching - Shutout'
colnames(tm_pitch)[colnames(tm_pitch) =='hld'] <- 'Pitching - Holds'
colnames(tm_pitch)[colnames(tm_pitch) =='r9'] <- 'Pitching - Runs per 9'
colnames(tm_pitch)[colnames(tm_pitch) =='avg'] <- 'Pitching - Opponent Average'
colnames(tm_pitch)[colnames(tm_pitch) =='obp'] <- 'Pitching - Opponent OBP'
colnames(tm_pitch)[colnames(tm_pitch) =='slg'] <- 'Pitching - Opponent SLG'
colnames(tm_pitch)[colnames(tm_pitch) =='ops'] <- 'Pitching - Opponent OPS'
colnames(tm_pitch)[colnames(tm_pitch) =='h9'] <- 'Pitching - Hits per 9'
colnames(tm_pitch)[colnames(tm_pitch) =='k9'] <- 'Pitching - Ks per 9'
colnames(tm_pitch)[colnames(tm_pitch) =='hr9'] <- 'Pitching - Homerun per 9'
colnames(tm_pitch)[colnames(tm_pitch) =='bb9'] <- 'Pitching - Walks per 9'
colnames(tm_pitch)[colnames(tm_pitch) =='fip'] <- 'Pitching - FIP'
colnames(tm_pitch)[colnames(tm_pitch) =='era'] <- 'Pitching - ERA'
colnames(tm_pitch)[colnames(tm_pitch) =='whip'] <- 'Pitching - WHIP'
colnames(tm_pitch)[colnames(tm_pitch) =='gbfbp'] <- 'Pitching - Groundball-Flyball Percent'
colnames(tm_pitch)[colnames(tm_pitch) =='kbb'] <- 'Pitching - KBB'
colnames(tm_pitch)[colnames(tm_pitch) =='babip'] <- 'Pitching - BABIP'
colnames(tm_pitch)[colnames(tm_pitch) =='Walks'] <- 'Pitching - Walks'
}
tm_field <- read.csv("~/Documents/GitHub/PBE/Exports/team_fielding_stats_stats.csv")
tm_field <- subset(tm_field, tm_field$league_id >0)
tm_field <- tm_field[-c(2,4:8,15:20,23,24)]
{
colnames(tm_field)[colnames(tm_field) =='tc'] <- 'Fielding - Total Chances'
colnames(tm_field)[colnames(tm_field) =='a'] <- 'Fielding - Assists'
colnames(tm_field)[colnames(tm_field) =='po'] <- 'Fielding - Put-Outs'
colnames(tm_field)[colnames(tm_field) =='e'] <- 'Fielding - Errors'
colnames(tm_field)[colnames(tm_field) =='dp'] <- 'Fielding - Double Plays'
colnames(tm_field)[colnames(tm_field) =='tp'] <- 'Fielding - Triple Plays'
colnames(tm_field)[colnames(tm_field) =='pct'] <- 'Fielding - Put-Out Pct'
colnames(tm_field)[colnames(tm_field) =='range'] <- 'Fielding - Range'
}
tm_bat <- read.csv("~/Documents/GitHub/PBE/Exports/team_batting_stats.csv")
tm_bat <- subset(tm_bat, tm_bat$league_id %in% c(100,101))
tm_bat$batter.walks <- tm_bat$bb + tm_bat$ibb + tm_bat$hp
tm_bat <- tm_bat[-c(2,4,5,10,11,19:24,26,27,29,36,38,39)]
{
colnames(tm_bat)[colnames(tm_bat) =='pa'] <- 'Batting - Plate Apperances'
colnames(tm_bat)[colnames(tm_bat) =='ab'] <- 'Batting - At-Bats'
colnames(tm_bat)[colnames(tm_bat) =='h'] <- 'Batting - Hits'
colnames(tm_bat)[colnames(tm_bat) =='k'] <- 'Batting - Strikeouts'
colnames(tm_bat)[colnames(tm_bat) =='d'] <- 'Batting - Doubles'
colnames(tm_bat)[colnames(tm_bat) =='t'] <- 'Batting - Triples'
colnames(tm_bat)[colnames(tm_bat) =='hr'] <- 'Batting - Homeruns'
colnames(tm_bat)[colnames(tm_bat) =='sb'] <- 'Batting - Stolen Bases'
colnames(tm_bat)[colnames(tm_bat) =='cs'] <- 'Batting - Caught Stealing'
colnames(tm_bat)[colnames(tm_bat) =='rbi'] <- 'Batting - RBIs'
colnames(tm_bat)[colnames(tm_bat) =='r'] <- 'Batting - Runs'
colnames(tm_bat)[colnames(tm_bat) =='gdp'] <- 'Batting - Grounded in Double Play'
colnames(tm_bat)[colnames(tm_bat) =='ebh'] <- 'Batting - Extra Base Hits'
colnames(tm_bat)[colnames(tm_bat) =='avg'] <- 'Batting - Average'
colnames(tm_bat)[colnames(tm_bat) =='obp'] <- 'Batting - OBP'
colnames(tm_bat)[colnames(tm_bat) =='slg'] <- 'Batting - SLG'
colnames(tm_bat)[colnames(tm_bat) =='rc'] <- 'Batting - Runs Created'
colnames(tm_bat)[colnames(tm_bat) =='rc27'] <- 'Batting - RC27'
colnames(tm_bat)[colnames(tm_bat) =='iso'] <- 'Batting - ISO'
colnames(tm_bat)[colnames(tm_bat) =='ops'] <- 'Batting - OPS'
colnames(tm_bat)[colnames(tm_bat) =='batter.walks'] <- 'Batting - Walks'
}
all.stats <- merge(tm_bat,tm_pitch)
all.stats <- merge(all.stats,tm_field)
all.stats <- merge(all.stats,lkup,all.x = TRUE)
cnames <- colnames(all.stats[c(3:69,72:74)])
cnames <- sort(cnames)
suppressMessages(library(tidyverse))
suppressMessages(library(dplyr))
suppressMessages(library(ggplot2))
suppressMessages(library(stringr))
suppressMessages(library(RColorBrewer))
suppressMessages(library(Hmisc))
#setwd("~/Documents/GitHub/PBE/Exports/")
tm <- read.csv("~/Documents/GitHub/PBE/Exports/teams.csv")
tm$`Team Name` <- paste(tm$name,tm$nickname)
tm <- tm[c(1,3,8,28)]
colnames(tm)[colnames(tm) == 'abbr'] <- 'Team Abbr'
lg <- read.csv("~/Documents/GitHub/PBE/Exports/leagues.csv")
lg <- lg[c(1,3)]
colnames(lg)[colnames(lg) == 'abbr'] <- 'League'
stdp <- read.csv("~/Documents/GitHub/PBE/Exports/team_record.csv")
stdp <- stdp[c(1,5,6)]
stdp <- subset(stdp,stdp$team_id %nin% c(7,8,12,13,14,15,22,23))
colnames(stdp)[colnames(stdp) == 'pos'] <- 'All - Division Standing'
lkup <- merge(tm,lg, all.x = TRUE)
lkup <- merge(lkup, stdp)
lkup <- lkup %>%
group_by(league_id) %>%
mutate(`All - League Standing` = round(rank(-pct),0)) %>%
ungroup
lkup$pct <- NULL
tm_pitch <- read.csv("~/Documents/GitHub/PBE/Exports/team_pitching_stats.csv")
tm_pitch <- subset(tm_pitch, tm_pitch$split_id == 1)
tm_pitch$Walks <- tm_pitch$bb + tm_pitch$iw + tm_pitch$hp
tm_pitch <- tm_pitch[-c(2,4:6,13,19,20,21,25:29,31:37,44:45,56,58:63,65,66)]
{
colnames(tm_pitch)[colnames(tm_pitch) =='ip'] <- 'Pitching - Innings Pitched'
colnames(tm_pitch)[colnames(tm_pitch) =='bf'] <- 'Pitching - Batters Faced'
colnames(tm_pitch)[colnames(tm_pitch) =='tb'] <- 'Pitching - Total Bases'
colnames(tm_pitch)[colnames(tm_pitch) =='ha'] <- 'Pitching - Hits Allowed'
colnames(tm_pitch)[colnames(tm_pitch) =='k'] <- 'Pitching - Strikeouts'
colnames(tm_pitch)[colnames(tm_pitch) =='rs'] <- 'Pitching - Run Support'
colnames(tm_pitch)[colnames(tm_pitch) =='r'] <- 'Pitching - Runs'
colnames(tm_pitch)[colnames(tm_pitch) =='er'] <- 'Pitching - Earned Runs'
colnames(tm_pitch)[colnames(tm_pitch) =='gb'] <- 'Pitching - Ground Balls'
colnames(tm_pitch)[colnames(tm_pitch) =='fb'] <- 'Pitching - Fly Balls'
colnames(tm_pitch)[colnames(tm_pitch) =='pi'] <- 'Pitching - Production Index'
colnames(tm_pitch)[colnames(tm_pitch) =='w'] <- 'Pitching - Wins'
colnames(tm_pitch)[colnames(tm_pitch) =='l'] <- 'Pitching - Loss'
colnames(tm_pitch)[colnames(tm_pitch) =='s'] <- 'Pitching - Saves'
colnames(tm_pitch)[colnames(tm_pitch) =='hra'] <- 'Pitching - Homeruns Allowed'
colnames(tm_pitch)[colnames(tm_pitch) =='qs'] <- 'Pitching - Qualty Starts'
colnames(tm_pitch)[colnames(tm_pitch) =='svo'] <- 'Pitching - Save Opportunities'
colnames(tm_pitch)[colnames(tm_pitch) =='bs'] <- 'Pitching - Blown Saves'
colnames(tm_pitch)[colnames(tm_pitch) =='ra'] <- 'Pitching - Run Average'
colnames(tm_pitch)[colnames(tm_pitch) =='cg'] <- 'Pitching - Complete Game'
colnames(tm_pitch)[colnames(tm_pitch) =='sho'] <- 'Pitching - Shutout'
colnames(tm_pitch)[colnames(tm_pitch) =='hld'] <- 'Pitching - Holds'
colnames(tm_pitch)[colnames(tm_pitch) =='r9'] <- 'Pitching - Runs per 9'
colnames(tm_pitch)[colnames(tm_pitch) =='avg'] <- 'Pitching - Opponent Average'
colnames(tm_pitch)[colnames(tm_pitch) =='obp'] <- 'Pitching - Opponent OBP'
colnames(tm_pitch)[colnames(tm_pitch) =='slg'] <- 'Pitching - Opponent SLG'
colnames(tm_pitch)[colnames(tm_pitch) =='ops'] <- 'Pitching - Opponent OPS'
colnames(tm_pitch)[colnames(tm_pitch) =='h9'] <- 'Pitching - Hits per 9'
colnames(tm_pitch)[colnames(tm_pitch) =='k9'] <- 'Pitching - Ks per 9'
colnames(tm_pitch)[colnames(tm_pitch) =='hr9'] <- 'Pitching - Homerun per 9'
colnames(tm_pitch)[colnames(tm_pitch) =='bb9'] <- 'Pitching - Walks per 9'
colnames(tm_pitch)[colnames(tm_pitch) =='fip'] <- 'Pitching - FIP'
colnames(tm_pitch)[colnames(tm_pitch) =='era'] <- 'Pitching - ERA'
colnames(tm_pitch)[colnames(tm_pitch) =='whip'] <- 'Pitching - WHIP'
colnames(tm_pitch)[colnames(tm_pitch) =='gbfbp'] <- 'Pitching - Groundball-Flyball Percent'
colnames(tm_pitch)[colnames(tm_pitch) =='kbb'] <- 'Pitching - KBB'
colnames(tm_pitch)[colnames(tm_pitch) =='babip'] <- 'Pitching - BABIP'
colnames(tm_pitch)[colnames(tm_pitch) =='Walks'] <- 'Pitching - Walks'
}
tm_field <- read.csv("~/Documents/GitHub/PBE/Exports/team_fielding_stats_stats.csv")
tm_field <- subset(tm_field, tm_field$league_id >0)
tm_field <- tm_field[-c(2,4:8,15:20,23,24)]
{
colnames(tm_field)[colnames(tm_field) =='tc'] <- 'Fielding - Total Chances'
colnames(tm_field)[colnames(tm_field) =='a'] <- 'Fielding - Assists'
colnames(tm_field)[colnames(tm_field) =='po'] <- 'Fielding - Put-Outs'
colnames(tm_field)[colnames(tm_field) =='e'] <- 'Fielding - Errors'
colnames(tm_field)[colnames(tm_field) =='dp'] <- 'Fielding - Double Plays'
colnames(tm_field)[colnames(tm_field) =='tp'] <- 'Fielding - Triple Plays'
colnames(tm_field)[colnames(tm_field) =='pct'] <- 'Fielding - Put-Out Pct'
colnames(tm_field)[colnames(tm_field) =='range'] <- 'Fielding - Range'
}
tm_bat <- read.csv("~/Documents/GitHub/PBE/Exports/team_batting_stats.csv")
tm_bat <- subset(tm_bat, tm_bat$league_id %in% c(100,101))
tm_bat$batter.walks <- tm_bat$bb + tm_bat$ibb + tm_bat$hp
tm_bat <- tm_bat[-c(2,4,5,10,11,19:24,26,27,29,36,38,39)]
{
colnames(tm_bat)[colnames(tm_bat) =='pa'] <- 'Batting - Plate Apperances'
colnames(tm_bat)[colnames(tm_bat) =='ab'] <- 'Batting - At-Bats'
colnames(tm_bat)[colnames(tm_bat) =='h'] <- 'Batting - Hits'
colnames(tm_bat)[colnames(tm_bat) =='k'] <- 'Batting - Strikeouts'
colnames(tm_bat)[colnames(tm_bat) =='d'] <- 'Batting - Doubles'
colnames(tm_bat)[colnames(tm_bat) =='t'] <- 'Batting - Triples'
colnames(tm_bat)[colnames(tm_bat) =='hr'] <- 'Batting - Homeruns'
colnames(tm_bat)[colnames(tm_bat) =='sb'] <- 'Batting - Stolen Bases'
colnames(tm_bat)[colnames(tm_bat) =='cs'] <- 'Batting - Caught Stealing'
colnames(tm_bat)[colnames(tm_bat) =='rbi'] <- 'Batting - RBIs'
colnames(tm_bat)[colnames(tm_bat) =='r'] <- 'Batting - Runs'
colnames(tm_bat)[colnames(tm_bat) =='gdp'] <- 'Batting - Grounded in Double Play'
colnames(tm_bat)[colnames(tm_bat) =='ebh'] <- 'Batting - Extra Base Hits'
colnames(tm_bat)[colnames(tm_bat) =='avg'] <- 'Batting - Average'
colnames(tm_bat)[colnames(tm_bat) =='obp'] <- 'Batting - OBP'
colnames(tm_bat)[colnames(tm_bat) =='slg'] <- 'Batting - SLG'
colnames(tm_bat)[colnames(tm_bat) =='rc'] <- 'Batting - Runs Created'
colnames(tm_bat)[colnames(tm_bat) =='rc27'] <- 'Batting - RC27'
colnames(tm_bat)[colnames(tm_bat) =='iso'] <- 'Batting - ISO'
colnames(tm_bat)[colnames(tm_bat) =='ops'] <- 'Batting - OPS'
colnames(tm_bat)[colnames(tm_bat) =='batter.walks'] <- 'Batting - Walks'
}
all.stats <- merge(tm_bat,tm_pitch)
all.stats <- merge(all.stats,tm_field)
all.stats <- merge(all.stats,lkup,all.x = TRUE)
cnames <- colnames(all.stats[c(3:69,72:74)])
cnames <- sort(cnames)
View(all.stats)
View(all.stats)
