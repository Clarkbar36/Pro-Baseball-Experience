mlm_ug_modelb_icc <- icc(mlm_ug_modelb)
mlm_ug_modelb <- lmer(GPA ~ URM + HS_GPA + (HS_GPA|Major),
clean_undergrad,
REML = FALSE)
mlm_ug_modelb_icc <- icc(mlm_ug_modelb)
mlm_ug_modelb <- lmer(GPA ~ Finaid + HS_GPA + (HS_GPA|Major),
clean_undergrad,
REML = FALSE)
mlm_ug_modelb_icc <- icc(mlm_ug_modelb)
mlm_ug_modelb <- lmer(GPA ~ Credit_Hours + HS_GPA + (HS_GPA|Major),
clean_undergrad,
REML = FALSE)
mlm_ug_modelb_icc <- icc(mlm_ug_modelb)
mlm_ug_modelb <- lmer(GPA ~ SAT + HS_GPA + (HS_GPA|Major),
clean_undergrad,
REML = FALSE)
mlm_ug_modelb_icc <- icc(mlm_ug_modelb)
summary(mlm_ug_modelb)
performance::r2(mlm_ug_modelb)
mlm_ug_modelb <- lmer(GPA ~ SAT + HS_GPA + (SAT|Major),
clean_undergrad,
REML = FALSE)
mlm_ug_modelb_icc <- icc(mlm_ug_modelb)
summary(mlm_ug_modelb)
performance::r2(mlm_ug_modelb)
mlm_ug_modelb <- lmer(GPA ~ SAT + HS_GPA + (HS_GPA|Major),
clean_undergrad,
REML = FALSE)
mlm_ug_modelb_icc <- icc(mlm_ug_modelb)
summary(mlm_ug_modelb)
performance::r2(mlm_ug_modelb)
mlm_ug_modelc <- lmer(GPA ~ Finaid + SAT + (Finaid|Major),
clean_undergrad,
REML = FALSE)
mlm_ug_modelc_icc <- icc(mlm_ug_modelc)
summary(mlm_ug_modelc)
performance::r2(mlm_ug_modelc)
mlm_ug_modela <- lmer(GPA ~ Gender + (Gender|Major),
clean_undergrad,
REML = FALSE)
mlm_ug_modela_icc <- icc(mlm_ug_modela)
mlm_ug_modela <- lmer(GPA ~ URM + (URM|Major),
clean_undergrad,
REML = FALSE)
mlm_ug_modela_icc <- icc(mlm_ug_modela)
mlm_ug_modela <- lmer(GPA ~ Finaid + (Finaid|Major),
clean_undergrad,
REML = FALSE)
mlm_ug_modela_icc <- icc(mlm_ug_modela)
View(clean_undergrad)
View(clean_undergrad)
View(undergrad)
View(undergrad)
colnames(undergrad)
test <- dummy.data.frame(undergrad, c(`Cohort URM External`, "gender", "finaid"))
test <- dummy.data.frame(undergrad, c("Cohort URM External, "gender", "finaid"))
test <- dummy.data.frame(undergrad, c("Cohort URM External", "gender", "finaid"))
View(test)
ugcorr <- cor(test)
View(clean_undergrad)
View(undergrad)
View(test)
admit <- read_xlsx("GDAT512-Final_Project.xlsx","Admit")
current <- read_xlsx("GDAT512-Final_Project.xlsx","Current")
undergrad <- merge(current, admit, all.x = TRUE)
undergrad$URID <- undergrad$URID * 32
names(undergrad)[names(undergrad) == 'Cohort Major1 Code'] <- 'Cohort.Major1.Code'
undergrad$Cohort.Major1.Code[is.na(undergrad$Cohort.Major1.Code)] <- "NONE"
majors <- data.frame(Cohort.Major1.Code = unique(undergrad$Cohort.Major1.Code))
majors$major_code <- 1:length(majors$Cohort.Major1.Code)
clean_undergrad <- merge(undergrad,majors, all.x = TRUE)
clean_undergrad$Cohort.Major1.Code <- NULL
names(clean_undergrad) <- c("URID","GPA","Credit_Hours","URM","Gender","Finaid","HS_GPA","SAT","First_Gen","Major")
test <- dummy.data.frame(clean_undergrad, c("URM", "Gender", "Finaid"))
View(test)
ugcorr <- cor(test)
corrplot(ugcorr, method = "number", type = "upper", diag = FALSE)
mlm_ug_null <- lmer(GPA ~ 1 + (1|Major),
test,
REML = FALSE)
mlm_ug_null_icc <- icc(mlm_ug_null)
summary(mlm_ug_null)
mlm_ug_null_icc
mlm_ug_modela <- lmer(GPA ~ URMY + (URMY|Major),
test,
REML = FALSE)
mlm_ug_modela_icc <- icc(mlm_ug_modela)
mlm_ug_modela <- lmer(GPA ~ GenderM + (GenderM|Major),
test,
REML = FALSE)
mlm_ug_modela_icc <- icc(mlm_ug_modela)
mlm_ug_modelb <- lmer(GPA ~ SAT + HS_GPA + (HS_GPA|Major),
clean_undergrad,
REML = FALSE)
mlm_ug_modelb_icc <- icc(mlm_ug_modelb)
summary(mlm_ug_modelb)
performance::r2(mlm_ug_modelb)
View(clean_undergrad)
prior <- c(rep(1/237,237))
likelihood <- c(rep(smoker/students, 237))
likelihood <- likelihood / sum(likelihood)
posterior <- prior * likelihood
m <- mean(posterior)
stan_d <- sd(posterior)
knitr::opts_chunk$set(echo = TRUE)
c("here",
"MASS",
"tidyverse") -> package_names
for(package_name in package_names) {
if(!is.element(package_name, installed.packages()[,1])) {
install.packages(package_name, repos="http://lib.stat.cmu.edu/R/CRAN")
}
library(package_name, character.only=TRUE,quietly=TRUE,verbose=FALSE)
}
rm(list=c("package_names","package_name"))
prior <- c(1/2,1/2)
likelihood <- c(smoker/students, nonsmoker/students)
posterior <- prior * likelihood
m <- mean(posterior)
stan_d <- round(sd(posterior),2)
knitr::opts_chunk$set(echo = TRUE)
c("here",
"MASS",
"tidyverse") -> package_names
for(package_name in package_names) {
if(!is.element(package_name, installed.packages()[,1])) {
install.packages(package_name, repos="http://lib.stat.cmu.edu/R/CRAN")
}
library(package_name, character.only=TRUE,quietly=TRUE,verbose=FALSE)
}
rm(list=c("package_names","package_name"))
#A prior
prior <- c(0/6,1/6,2/6,3/6,4/6,5/6,6/6)
prior <- prior/ sum(prior)
#B likelihood
likelihood <- c(rep(1/6,6),0)
# C posterior
posterior <- prior * likelihood
posterior <- posterior/sum(posterior)
round(posterior,2)
prior <- c(rep(1/2,237))
prior <- prior/sum(prior)
prior <- c(1/2,1/2)
likelihood <- c(4/16, 8/16)
posterior <- prior * likelihood
type1 <- posterior[1] * (-3) + (1-posterior[1]) * 100
type2 <-posterior[2] * (-30) + (1-posterior[2]) * 100
type1 <- posterior[1] * (-3) + (1-posterior[1]) * 100
type2 <-posterior[2] * (-30) + (1-posterior[2]) * 100
shiny::runApp('Box/Alissa Private Folder/Alex/Total Opportunities')
runApp('Box/Alissa Private Folder/Alex/Total Opportunities')
runApp('Box/Alissa Private Folder/Alex/Total Opportunities')
runApp('Box/Alissa Private Folder/Alex/Total Opportunities')
library(devtools)
devtools::install_local(path = "~/Downloads/ggbiplot-master.zip")
install_github("vqv/ggbiplot")
library(ggbiplot)
setwd("~/Box/AS&E Institutional Research/Peer Rankings")
library(ggbiplot)
library(tidyverse)
## Key ##
inst_key <- read.csv("inst-codes.csv", stringsAsFactors = FALSE)
key <- inst_key %>% filter(unitid > 0) %>% select(unitid, grid, institution_id, control)
## Enrollments ##
enrollments <- read.csv("Enrollments.csv",stringsAsFactors = FALSE)
avg_enroll <- enrollments %>% group_by(unitid, institution.name) %>% summarise(ug_full_avg_enroll = round(mean(Undergraduate_Enrollment),0), gr_full_avg_enroll = round(mean(Graduate_Enrollment),0))
twenty_year_avg_enroll <- enrollments %>% filter(year >= (max(year)-20)) %>% group_by(unitid, institution.name) %>% summarise(ug_20yr_avg_enroll = round(mean(Undergraduate_Enrollment),0), gr_20yr_avg_enroll = round(mean(Graduate_Enrollment),0))
ten_year_avg_enroll <- enrollments %>% filter(year >= (max(year)-10)) %>% group_by(unitid, institution.name) %>% summarise(ug_10yr_avg_enroll = round(mean(Undergraduate_Enrollment),0), gr_10yr_avg_enroll = round(mean(Graduate_Enrollment),0))
five_year_avg_enroll <- enrollments %>% filter(year >= (max(year)-5)) %>% group_by(unitid, institution.name) %>% summarise(ug_5yr_avg_enroll = round(mean(Undergraduate_Enrollment),0), gr_5yr_avg_enroll = round(mean(Graduate_Enrollment),0))
enroll <- bind_cols(avg_enroll,twenty_year_avg_enroll,ten_year_avg_enroll,five_year_avg_enroll) %>%
select(unitid, institution.name,ug_full_avg_enroll,ug_20yr_avg_enroll,ug_10yr_avg_enroll,ug_5yr_avg_enroll,gr_full_avg_enroll,gr_20yr_avg_enroll,gr_10yr_avg_enroll,gr_5yr_avg_enroll,-unitid1,-institution.name1,-unitid2,-institution.name2, -unitid3,-institution.name3)
enroll[is.na(enroll)] <- 0
peer <- merge(key,enroll)
## Citations per Publication ##
cits_pubs <- read.csv("Citations_per_Publication.csv",stringsAsFactors = FALSE)
peer <- merge(peer,cits_pubs,all.x = TRUE)
## Institutional Works ##
IW <- read.csv("Institution_Works.csv",stringsAsFactors = FALSE)
institution_works <- IW %>%
select(Institution_id, Faculty.Count, Articles.Count..2014...2017., Awards.Count..lifetime.) %>%
dplyr::rename(Articles.Count = Articles.Count..2014...2017., Awards.Count = Awards.Count..lifetime.,institution_id = Institution_id ) %>%
filter(institution_id %in% key$institution_id)
peer <- merge(peer,institution_works,all.x = TRUE)
## Endowment ##
NACUBO <- read.csv("NACUBO_Endowment.csv")
endowments <- NACUBO %>% select(unitid, FY2017.Endowment, FY2016.Endowment, FY2017.Endowment.per.FTE.Student)
peer <- merge(peer, endowments,all.x = TRUE)
## Postdocs ##
postdocs <- read.csv("2017_Postdoc_Ranks.csv")
postdoc_rnks <- postdocs %>% select(Rank, Total, unitid) %>%
dplyr::rename(post_doc_rank = Rank, post_doc_total = Total) %>%
filter(unitid %in% key$unitid)
peer <- merge(peer, postdoc_rnks, all.x = TRUE)
## QS Ranking ##
QS <- read.csv("QS.csv")
QS_rnk <- QS %>% select(QS.2019.Rank, QS.2018.Rank, unitid, QS.Overall.Score)
peer <- merge(peer, QS_rnk, all.x = TRUE)
## Research Expenditures ##
RE <- read.csv("Research_Expenditures.csv",stringsAsFactors = FALSE)
RE$RE_prcnt_change <- round((RE$Research.Expenditures...2017 - RE$Research.Expenditures...2010)/RE$Research.Expenditures...2010,2)
research_expend <- RE %>% select(unitid,RE_prcnt_change) %>%
filter(unitid %in% key$unitid)
peer <- merge(peer,research_expend, all.x = TRUE )
## USNEWS ##
USNEWS <- read.csv("US_News_Data.csv",stringsAsFactors = FALSE)
USNEWS_rnks <- USNEWS %>% select(USNEWS...Rank.Year, USNEWS...Rank..Tier, USNEWS...Overall.Score, unitid) %>%
dplyr::rename(USNEWS_Year = USNEWS...Rank.Year, USNEWS_Tier = USNEWS...Rank..Tier, USNEWS_Score = USNEWS...Overall.Score) %>%
filter(unitid %in% key$unitid)
#Cleaning
remove_rnk <- c("T2", "T3", "T4","NR")
for(j in seq_along(remove_rnk)){
USNEWS_rnks$USNEWS_Tier <- gsub(remove_rnk[j], "250", USNEWS_rnks$USNEWS_Tier)
}
remove_score <- c("#N/A", "NR")
for(j in seq_along(remove_score)){
USNEWS_rnks$USNEWS_Score <- gsub(remove_score[j], "0", USNEWS_rnks$USNEWS_Score)
}
USNEWS_rnks$USNEWS_Score <- sub("^$", 0, USNEWS_rnks$USNEWS_Score)
USNEWS_rnks$USNEWS_Tier <- as.numeric(USNEWS_rnks$USNEWS_Tier)
USNEWS_rnks$USNEWS_Score <- as.numeric(USNEWS_rnks$USNEWS_Score)
US_five_yr <- USNEWS_rnks %>% filter(USNEWS_Year >= (max(USNEWS_Year)-5)) %>% group_by(unitid) %>% summarise(USNEWS_5_yr_avg_tier = round(mean(USNEWS_Tier),0), USNEWS_5_yr_avg_score = round(mean(USNEWS_Score),0))
US_ten_yr <- USNEWS_rnks %>% filter(USNEWS_Year >= (max(USNEWS_Year)-10)) %>% group_by(unitid) %>% summarise(USNEWS_10_yr_avg_tier = round(mean(USNEWS_Tier),0), USNEWS_10_yr_avg_score = round(mean(USNEWS_Score),0))
US_full <- USNEWS_rnks %>% group_by(unitid) %>% summarise(USNEWS_full_avg_tier = round(mean(USNEWS_Tier),0), USNEWS_full_avg_score = round(mean(USNEWS_Score),0))
US_NEWS <- bind_cols(US_five_yr, US_ten_yr, US_full) %>%
select(unitid,USNEWS_5_yr_avg_tier,USNEWS_10_yr_avg_tier,USNEWS_full_avg_tier,USNEWS_5_yr_avg_score,USNEWS_10_yr_avg_score,USNEWS_full_avg_score,-unitid1, -unitid2)
peer <- merge(peer,US_NEWS,all.x = TRUE)
extra_variables <- read.csv("Extra_Variables.csv")
## Extra Variables
# ACTCMP25 - 	ACT Composite Score, 25 percentile
# ACTFINAL -	Derived 25th percentile ACT score, weighting both ACT and equated SAT scores by number submitted
# NGCIP2DR -	Number of different 2-digit CIP codes in which institution confers research/scholarship doctoral degrees
# NGCIP2PXDR -	Number of different 2-digit CIP codes in which institution confers master's, doctoral-professional practice, and doctoral-other degrees
# PCTCOEX -	Percent of CIP4 areas in which undergraduate degrees are conferred that graduate degrees are also conferred
# PCTLRGST -	Percent of total degrees conferred in CIP-2 designation under which largest number of degrees conferred
# SATACTEQ25 -	The ACT equivalent score for the combined 25th percentile SAT score
# SATCMB25 - Combined SAT-Math and SAT-Verbal 25th percentils scores
# SATM25 -	SAT-Verbal 25th percentile score
# SATV25 -	SAT-Math 25th percentile score
# STEM_RSD -	STEM research/scholarship doctoral degrees
# UGCIP4PR -	Number of different 4-digit CIP code designations in which institution confers an undergraduate degree
# UGNTRFT17 -	Undergraduate new transfer-in full-time students
extra <- extra_variables %>%
filter(unitid %in% key$unitid) %>%
select(unitid, ACTCMP25, ACTFINAL, NGCIP2DR, NGCIP2PXDR, PCTCOEX, PCTLRGST, SATACTEQ25, SATCMB25, SATV25, STEM_RSD, UGCIP4PR, UGNTRFT17)
peer <- merge(peer, extra, all.x = TRUE)
View(peer)
Private_Peer <- subset(peer,peer$Control == "PRIVATE")
Private_peer.pca <- prcomp(Private_Peer[,c(7:32)],scale. = TRUE, center = TRUE)
Private_peer.pca <- prcomp(Private_Peer[,c(6:46)],scale. = TRUE, center = TRUE)
View(peer)
Private_Peer <- subset(peer,peer$control == "PRIVATE")
Private_peer.pca <- prcomp(Private_Peer[,c(6:46)],scale. = TRUE, center = TRUE)
View(Private_Peer)
Private_Peer <- subset(peer,peer$control == "PRIVATE") %>% na.omit()
Private_peer.pca <- prcomp(Private_Peer[,c(6:46)],scale. = TRUE, center = TRUE)
str(Private_Peer)
postdoc_rnks$post_doc_total <- as.numeric(as.character(postdoc_rnks$post_doc_total))
str(postdoc_rnks)
View(postdoc_rnks)
## Postdocs ##
postdocs <- read.csv("2017_Postdoc_Ranks.csv")
postdoc_rnks <- postdocs %>% select(Rank, Total, unitid) %>%
dplyr::rename(post_doc_rank = Rank, post_doc_total = Total) %>%
filter(unitid %in% key$unitid)
View(postdoc_rnks)
View(postdocs)
## Postdocs ##
postdocs <- read.csv("2017_Postdoc_Ranks.csv")
postdoc_rnks <- postdocs %>% select(Rank, Total, unitid) %>%
dplyr::rename(post_doc_rank = Rank, post_doc_total = Total) %>%
filter(unitid %in% key$unitid)
str(postdoc_rnks)
## QS Ranking ##
QS <- read.csv("QS.csv")
str(QS)
QS_rnk$QS.Overall.Score <- as.numeric(as.character(QS_rnk$QS.Overall.Score))
## QS Ranking ##
QS <- read.csv("QS.csv")
str(QS)
setwd("~/Box/AS&E Institutional Research/Peer Rankings")
library(ggbiplot)
library(tidyverse)
## Key ##
inst_key <- read.csv("inst-codes.csv", stringsAsFactors = FALSE)
key <- inst_key %>% filter(unitid > 0) %>% select(unitid, grid, institution_id, control)
## Enrollments ##
enrollments <- read.csv("Enrollments.csv",stringsAsFactors = FALSE)
avg_enroll <- enrollments %>% group_by(unitid, institution.name) %>% summarise(ug_full_avg_enroll = round(mean(Undergraduate_Enrollment),0), gr_full_avg_enroll = round(mean(Graduate_Enrollment),0))
twenty_year_avg_enroll <- enrollments %>% filter(year >= (max(year)-20)) %>% group_by(unitid, institution.name) %>% summarise(ug_20yr_avg_enroll = round(mean(Undergraduate_Enrollment),0), gr_20yr_avg_enroll = round(mean(Graduate_Enrollment),0))
ten_year_avg_enroll <- enrollments %>% filter(year >= (max(year)-10)) %>% group_by(unitid, institution.name) %>% summarise(ug_10yr_avg_enroll = round(mean(Undergraduate_Enrollment),0), gr_10yr_avg_enroll = round(mean(Graduate_Enrollment),0))
five_year_avg_enroll <- enrollments %>% filter(year >= (max(year)-5)) %>% group_by(unitid, institution.name) %>% summarise(ug_5yr_avg_enroll = round(mean(Undergraduate_Enrollment),0), gr_5yr_avg_enroll = round(mean(Graduate_Enrollment),0))
enroll <- bind_cols(avg_enroll,twenty_year_avg_enroll,ten_year_avg_enroll,five_year_avg_enroll) %>%
select(unitid, institution.name,ug_full_avg_enroll,ug_20yr_avg_enroll,ug_10yr_avg_enroll,ug_5yr_avg_enroll,gr_full_avg_enroll,gr_20yr_avg_enroll,gr_10yr_avg_enroll,gr_5yr_avg_enroll,-unitid1,-institution.name1,-unitid2,-institution.name2, -unitid3,-institution.name3)
enroll[is.na(enroll)] <- 0
peer <- merge(key,enroll)
## Citations per Publication ##
cits_pubs <- read.csv("Citations_per_Publication.csv",stringsAsFactors = FALSE)
peer <- merge(peer,cits_pubs,all.x = TRUE)
## Institutional Works ##
IW <- read.csv("Institution_Works.csv",stringsAsFactors = FALSE)
institution_works <- IW %>%
select(Institution_id, Faculty.Count, Articles.Count..2014...2017., Awards.Count..lifetime.) %>%
dplyr::rename(Articles.Count = Articles.Count..2014...2017., Awards.Count = Awards.Count..lifetime.,institution_id = Institution_id ) %>%
filter(institution_id %in% key$institution_id)
peer <- merge(peer,institution_works,all.x = TRUE)
## Endowment ##
NACUBO <- read.csv("NACUBO_Endowment.csv")
endowments <- NACUBO %>% select(unitid, FY2017.Endowment, FY2016.Endowment, FY2017.Endowment.per.FTE.Student)
peer <- merge(peer, endowments,all.x = TRUE)
## Postdocs ##
postdocs <- read.csv("2017_Postdoc_Ranks.csv")
postdoc_rnks <- postdocs %>% select(Rank, Total, unitid) %>%
dplyr::rename(post_doc_rank = Rank, post_doc_total = Total) %>%
filter(unitid %in% key$unitid)
postdoc_rnks$post_doc_total <- as.numeric(as.character(postdoc_rnks$post_doc_total))
## QS Ranking ##
QS <- read.csv("QS.csv")
QS_rnk <- QS %>% select(QS.2019.Rank, QS.2018.Rank, unitid, QS.Overall.Score)
peer <- merge(peer, QS_rnk, all.x = TRUE)
## Research Expenditures ##
RE <- read.csv("Research_Expenditures.csv",stringsAsFactors = FALSE)
RE$RE_prcnt_change <- round((RE$Research.Expenditures...2017 - RE$Research.Expenditures...2010)/RE$Research.Expenditures...2010,2)
research_expend <- RE %>% select(unitid,RE_prcnt_change) %>%
filter(unitid %in% key$unitid)
peer <- merge(peer,research_expend, all.x = TRUE )
## USNEWS ##
USNEWS <- read.csv("US_News_Data.csv",stringsAsFactors = FALSE)
USNEWS_rnks <- USNEWS %>% select(USNEWS...Rank.Year, USNEWS...Rank..Tier, USNEWS...Overall.Score, unitid) %>%
dplyr::rename(USNEWS_Year = USNEWS...Rank.Year, USNEWS_Tier = USNEWS...Rank..Tier, USNEWS_Score = USNEWS...Overall.Score) %>%
filter(unitid %in% key$unitid)
#Cleaning
remove_rnk <- c("T2", "T3", "T4","NR")
for(j in seq_along(remove_rnk)){
USNEWS_rnks$USNEWS_Tier <- gsub(remove_rnk[j], "250", USNEWS_rnks$USNEWS_Tier)
}
remove_score <- c("#N/A", "NR")
for(j in seq_along(remove_score)){
USNEWS_rnks$USNEWS_Score <- gsub(remove_score[j], "0", USNEWS_rnks$USNEWS_Score)
}
USNEWS_rnks$USNEWS_Score <- sub("^$", 0, USNEWS_rnks$USNEWS_Score)
USNEWS_rnks$USNEWS_Tier <- as.numeric(USNEWS_rnks$USNEWS_Tier)
USNEWS_rnks$USNEWS_Score <- as.numeric(USNEWS_rnks$USNEWS_Score)
US_five_yr <- USNEWS_rnks %>% filter(USNEWS_Year >= (max(USNEWS_Year)-5)) %>% group_by(unitid) %>% summarise(USNEWS_5_yr_avg_tier = round(mean(USNEWS_Tier),0), USNEWS_5_yr_avg_score = round(mean(USNEWS_Score),0))
US_ten_yr <- USNEWS_rnks %>% filter(USNEWS_Year >= (max(USNEWS_Year)-10)) %>% group_by(unitid) %>% summarise(USNEWS_10_yr_avg_tier = round(mean(USNEWS_Tier),0), USNEWS_10_yr_avg_score = round(mean(USNEWS_Score),0))
US_full <- USNEWS_rnks %>% group_by(unitid) %>% summarise(USNEWS_full_avg_tier = round(mean(USNEWS_Tier),0), USNEWS_full_avg_score = round(mean(USNEWS_Score),0))
US_NEWS <- bind_cols(US_five_yr, US_ten_yr, US_full) %>%
select(unitid,USNEWS_5_yr_avg_tier,USNEWS_10_yr_avg_tier,USNEWS_full_avg_tier,USNEWS_5_yr_avg_score,USNEWS_10_yr_avg_score,USNEWS_full_avg_score,-unitid1, -unitid2)
peer <- merge(peer,US_NEWS,all.x = TRUE)
extra_variables <- read.csv("Extra_Variables.csv")
## Extra Variables
# ACTCMP25 - 	ACT Composite Score, 25 percentile
# ACTFINAL -	Derived 25th percentile ACT score, weighting both ACT and equated SAT scores by number submitted
# NGCIP2DR -	Number of different 2-digit CIP codes in which institution confers research/scholarship doctoral degrees
# NGCIP2PXDR -	Number of different 2-digit CIP codes in which institution confers master's, doctoral-professional practice, and doctoral-other degrees
# PCTCOEX -	Percent of CIP4 areas in which undergraduate degrees are conferred that graduate degrees are also conferred
# PCTLRGST -	Percent of total degrees conferred in CIP-2 designation under which largest number of degrees conferred
# SATACTEQ25 -	The ACT equivalent score for the combined 25th percentile SAT score
# SATCMB25 - Combined SAT-Math and SAT-Verbal 25th percentils scores
# SATM25 -	SAT-Verbal 25th percentile score
# SATV25 -	SAT-Math 25th percentile score
# STEM_RSD -	STEM research/scholarship doctoral degrees
# UGCIP4PR -	Number of different 4-digit CIP code designations in which institution confers an undergraduate degree
# UGNTRFT17 -	Undergraduate new transfer-in full-time students
extra <- extra_variables %>%
filter(unitid %in% key$unitid) %>%
select(unitid, ACTCMP25, ACTFINAL, NGCIP2DR, NGCIP2PXDR, PCTCOEX, PCTLRGST, SATACTEQ25, SATCMB25, SATV25, STEM_RSD, UGCIP4PR, UGNTRFT17)
peer <- merge(peer, extra, all.x = TRUE)
Private_peer.pca <- prcomp(Private_Peer[,c(6:46)],scale. = TRUE, center = TRUE)
Private_Peer <- subset(peer,peer$control == "PRIVATE")
Private_peer.pca <- prcomp(Private_Peer[,c(6:46)],scale. = TRUE, center = TRUE)
View(Private_Peer)
Private_peer.pca <- prcomp(Private_Peer[,c(6:44)],scale. = TRUE, center = TRUE)
Private_Peer <- subset(peer,peer$control == "PRIVATE") %>% na.omit()
Private_peer.pca <- prcomp(Private_Peer[,c(6:44)],scale. = TRUE, center = TRUE)
summary(Private_peer.pca)
ggbiplot(Private_peer.pca, ellipse=TRUE, labels=Private_Peer$Inst.Name, groups=Private_Peer$Control, var.axes = FALSE, obs.scale = 1, var.scale = 1) + scale_colour_manual(values = c("forest green"))+ ggtitle("PCA of Private AAU Schools")+theme_minimal()+theme(legend.position = "bottom")
colnames(Private_Peer)
ggbiplot(Private_peer.pca, ellipse=TRUE, labels=Private_Peer$institution.name, groups=Private_Peer$control, var.axes = FALSE, obs.scale = 1, var.scale = 1) + scale_colour_manual(values = c("forest green"))+ ggtitle("PCA of Private AAU Schools")+theme_minimal()+theme(legend.position = "bottom")
Peer.pca <- peer %>% na.omit()
Peer.pca <- prcomp(peer[,c(6:44)],scale. = TRUE, center = TRUE)
summary(Peer.pca)
ggbiplot(Peer.pca, ellipse=TRUE, labels=Peer$institution.name, groups=Peer$control, var.axes = FALSE, obs.scale = 1, var.scale = 1) + scale_colour_manual(values = c("forest green","orange"))+ ggtitle("PCA of AAU Schools")+theme_minimal()+theme(legend.position = "bottom")
View(Peer.pca)
Peer.pca <- prcomp(Peer.pca[,c(6:44)],scale. = TRUE, center = TRUE)
summary(Peer.pca)
ggbiplot(Peer.pca, ellipse=TRUE, labels=Peer$institution.name, groups=Peer$control, var.axes = FALSE, obs.scale = 1, var.scale = 1) + scale_colour_manual(values = c("forest green","orange"))+ ggtitle("PCA of AAU Schools")+theme_minimal()+theme(legend.position = "bottom")
ggbiplot(Peer.pca, ellipse=TRUE, labels=Peer.pca$institution.name, groups=Peer.pca$control, var.axes = FALSE, obs.scale = 1, var.scale = 1) + scale_colour_manual(values = c("forest green","orange"))+ ggtitle("PCA of AAU Schools")+theme_minimal()+theme(legend.position = "bottom")
Peer.pca <- peer %>% na.omit()
Peer.all <- peer %>% na.omit()
Peer.pca <- prcomp(Peer.all[,c(6:44)],scale. = TRUE, center = TRUE)
summary(Peer.pca)
ggbiplot(Peer.pca, ellipse=TRUE, labels=Peer.all$institution.name, groups=Peer.all$control, var.axes = FALSE, obs.scale = 1, var.scale = 1) + scale_colour_manual(values = c("forest green","orange"))+ ggtitle("PCA of AAU Schools")+theme_minimal()+theme(legend.position = "bottom")
source('~/Box/AS&E Institutional Research/Peer Rankings/Peer.R')
View(peer)
View(peer)
Private_Peer <- subset(peer,peer$control == "PRIVATE") %>% na.omit()
View(peer)
Private_peer.pca <- prcomp(Private_Peer[,c(6:44)],scale. = TRUE, center = TRUE)
summary(Private_peer.pca)
ggbiplot(Private_peer.pca, ellipse=TRUE, labels=Private_Peer$institution.name, groups=Private_Peer$control, var.axes = FALSE, obs.scale = 1, var.scale = 1) + scale_colour_manual(values = c("forest green"))+ ggtitle("PCA of Private AAU Schools")+theme_minimal()+theme(legend.position = "bottom")
ggbiplot(Private_peer.pca, ellipse=TRUE, groups=Private_Peer$control, var.axes = FALSE, obs.scale = 1, var.scale = 1) + scale_colour_manual(values = c("forest green"))+ ggtitle("PCA of Private AAU Schools")+theme_minimal()+theme(legend.position = "bottom")
ggbiplot(Peer.pca, ellipse=TRUE, labels=Peer.all$institution.name, groups=Peer.all$control, var.axes = FALSE, obs.scale = 1, var.scale = 1) + scale_colour_manual(values = c("forest green","orange"))+ ggtitle("PCA of AAU Schools")+theme_minimal()+theme(legend.position = "bottom")
summary(Peer.pca)
library(shiny); runApp('Documents/GitHub/PBE/PBE_App.R')
library(rpart)
train
install.packages("titanic")
library(titanic)
train <- titanic_train
train$Survived
table(train$Survived)
prop.table(table(train$Survived))
aggregate(Survived ~ Child + Sex, data = train, FUN = length())
View(train)
train$Child[train$Age < 18] <- 1
View(train)
train$Child <- 0
train$Child[train$Age < 18] <- 1
View(train)
aggregate(Survived ~ Child + Sex, data = train, FUN = length)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data = train, method = "class")
plot(fit)
text(fit)
test <- titanic_test
first_predict <- predict(fit, test, type = "class")
first_predict
View(test)
suppressMessages(library(tidyverse))
suppressMessages(library(dplyr))
suppressMessages(library(ggplot2))
suppressMessages(library(stringr))
suppressMessages(library(RColorBrewer))
library(GeomMLBStadiums)
geom_spraychart()
ggplot() +
geom_mlb_stadium(stadium_segments = "all") +
coord_fixed()
suppressMessages(library(tidyverse))
suppressMessages(library(dplyr))
suppressMessages(library(ggplot2))
suppressMessages(library(stringr))
suppressMessages(library(RColorBrewer))
library(GeomMLBStadiums)
setwd("~/Documents/GitHub/PBE/")
x_pl <- read.csv('Exports/players.csv',header = TRUE)
x_pl$full_name <- paste(x_pl$first_name,x_pl$last_name)
positions <- data.frame('position' = 1:10, 'position_name' = c('P','C','1B','2B','3B','SS','LF','CF','RF','DH'))
combined.players <- merge(x_pl,positions,by = "position", all.x = TRUE)
pl_name_lookup <- combined.players %>%
select(player_id, team_id, league_id, full_name, position_name) %>%
filter(league_id != 0)
leagues <- read.csv("Exports/leagues.csv", header = TRUE)
leagues <- leagues %>%
select(league_id, abbr) %>%
rename(league_abbr = abbr)
pl_name_lookup <- merge(pl_name_lookup,leagues,all.x = TRUE)
all_teams <- read.csv("Exports/teams.csv",header = TRUE)
all_teams$team_name <- paste(all_teams$name,all_teams$nickname)
team_lookup <- all_teams %>%
select(team_id, abbr, team_name) %>%
rename(team_abbr = abbr)
pl_name_lookup <- merge(pl_name_lookup, team_lookup, all.x = TRUE)
names <- colnames(pl_name_lookup)
hitter_lookup <-  pl_name_lookup
colnames(hitter_lookup) <- paste("Hitter", names, sep = "_")
pitcher_lookup <-  pl_name_lookup
colnames(pitcher_lookup) <- paste("Pitcher", names, sep = "_")
pitcher_lookup <- pitcher_lookup %>% select(-Pitcher_position_name)
at_bats <- read.csv("Exports/players_at_bat_batting_stats.csv")
at_bats <- at_bats %>% rename(Hitter_player_id = player_id, Hitter_team_id = team_id, Pitcher_player_id = opponent_player_id)
at_bats <- merge(at_bats, hitter_lookup, all.x = TRUE)
at_bats <- merge(at_bats, pitcher_lookup, all.x = TRUE)
results <- read.csv("results.csv")
at_bats <- merge(at_bats, results, all.x = TRUE)
at_bats <- at_bats %>% drop_na()
at_bats <- at_bats %>% mutate(RISP = ifelse(base2 == 1 | base3 == 1, 1,0), at_bat = 1)
at_bats$RISP <- as.integer(at_bats$RISP)
at_bats$at_bat <- as.integer(at_bats$at_bat)
games <- read.csv('Exports/games.csv', header = TRUE, sep = ',')
games <- subset(games,games$played == 1 & games$game_type == 0 & games$league_id != 1000)
games <- games %>% select(game_id) %>% distinct()
at_bats <- at_bats %>% filter(game_id %in% games$game_id)
hitter <- "Nate Piazza"
pitcher <- "Henry Chadwick"
ab_filtered <- at_bats %>% filter(Hitter_full_name == hitter & Pitcher_full_name == pitcher) %>%
group_by(Hitter_full_name, Hitter_position_name, Hitter_league_abbr, Hitter_team_abbr, Hitter_team_name,
Pitcher_full_name, Pitcher_league_abbr, Pitcher_team_abbr, Pitcher_team_name) %>%
summarise(ABs = sum(at_bat), Hits = sum(hit), Singles = sum(sngl), Doubles = sum(dbl), Triples = sum(trpl),
Homeruns = sum(hr), Walks = sum(bb), Stolen_Bases = sum(sb), RBIs = sum(rbi), Extra_Base_Hits = sum(ebh),
Strikeouts = sum(k), Sacrifice_Fly = sum(sac), Batting_Average = round(Hits/ABs,3),
On_Base_Percentage = round((Hits+Walks)/(ABs+Walks+Sacrifice_Fly),3))
# Homerun Coordinates
stadiums <- MLBStadiumsPathData
generic_of <-  stadiums %>% filter(team == "generic" & segment == "outfield_outer" & y <= 100)
new_coords <- data.frame(new_x = runif(102,.01,.05),
new_y = runif(102,1,13))
generic_of <- bind_cols(generic_of, new_coords)
generic_of$plt_x <- generic_of$x - generic_of$new_x
generic_of$plt_y <- generic_of$y - generic_of$new_y
generic_of <- generic_of %>% select(plt_x, plt_y)
hr_count <- ab_filtered$Homeruns[1]
homerun_coords <- sample_n(generic_of,hr_count)
homerun_coords$type <- "HR"
# Single Coordinates
generic_if <-  stadiums %>% filter(team == "generic" & segment == "infield_outer")
plot(generic_if$x, generic_if$y)
ggplot() +
geom_mlb_stadium(stadium_segments = "all") +
coord_fixed()
ggplot() +
geom_spraychart()
write.csv(generic_if,"boundary.csv",row.names = FALSE)
